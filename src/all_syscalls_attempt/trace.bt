// This cript is created using the python script genTracer.py, 
// and pulls data from table.html, which I took from the internet
// Currently doesn't work
#!/usr/bin/env bpftrace
#include <keyutils.h>

BEGIN
{
    printf("Tracing syscalls for something. Ctrl-C to stop.\n");
    printf("%-9s %-6s %s \n", "TIME", "PID", "EVENT");
}

tracepoint:syscalls:sys_enter_read /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->buf, args->count);
}

tracepoint:syscalls:sys_enter_write /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->buf, args->count);
}
/*
tracepoint:syscalls:sys_enter_open /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d \n",  args->filename, args->flags, args->mode);
}

tracepoint:syscalls:sys_enter_close /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fd);
}

tracepoint:syscalls:sys_enter_newstat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->filename, args->statbuf);
}

tracepoint:syscalls:sys_enter_newfstat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->fd, args->statbuf);
}

tracepoint:syscalls:sys_enter_newlstat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->filename, args->statbuf);
}

tracepoint:syscalls:sys_enter_poll /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d \n",  args->ufds, args->nfds, args->timeout_msecs);
}

tracepoint:syscalls:sys_enter_lseek /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->offset, args->origin);
}

tracepoint:syscalls:sys_enter_mmap /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d arg6:%d \n",  args->addr, args->len, args->prot, args->flags, args->fd, args->off);
}

tracepoint:syscalls:sys_enter_mprotect /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->start, args->len, args->prot);
}

tracepoint:syscalls:sys_enter_munmap /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->addr, args->len);
}

tracepoint:syscalls:sys_enter_brk /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->brk);
}

tracepoint:syscalls:sys_enter_rt_sigaction /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->sig, args->act, args->oact, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_rt_sigprocmask /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->how, args->nset, args->oset, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_rt_sigreturn /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->__unused);
}

tracepoint:syscalls:sys_enter_ioctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->fd, args->cmd, args->arg);
}

tracepoint:syscalls:sys_enter_pread64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p \n",  args->fd, args->buf, args->count, args->pos);
}

tracepoint:syscalls:sys_enter_pwrite64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p \n",  args->fd, args->buf, args->count, args->pos);
}

tracepoint:syscalls:sys_enter_readv /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->vec, args->vlen);
}

tracepoint:syscalls:sys_enter_writev /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->vec, args->vlen);
}

tracepoint:syscalls:sys_enter_access /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->filename, args->mode);
}

tracepoint:syscalls:sys_enter_pipe /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->filedes);
}

tracepoint:syscalls:sys_enter_select /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p arg5:%p \n",  args->n, args->inp, args->outp, args->d_set*exp, args->tvp);
}

tracepoint:syscalls:sys_enter_sched_yield /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_mremap /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d \n",  args->addr, args->old_len, args->new_len, args->flags, args->new_addr);
}

tracepoint:syscalls:sys_enter_msync /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->start, args->len, args->flags);
}

tracepoint:syscalls:sys_enter_mincore /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p \n",  args->start, args->len, args->vec);
}

tracepoint:syscalls:sys_enter_madvise /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->start, args->len_in, args->behavior);
}

tracepoint:syscalls:sys_enter_shmget /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d \n",  args->key, args->size, args->shmflg);
}

tracepoint:syscalls:sys_enter_shmat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->shmid, args->shmaddr, args->shmflg);
}

tracepoint:syscalls:sys_enter_shmctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p \n",  args->shmid, args->cmd, args->buf);
}

tracepoint:syscalls:sys_enter_dup /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fildes);
}

tracepoint:syscalls:sys_enter_dup2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->oldfd, args->newfd);
}

tracepoint:syscalls:sys_enter_pause /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_nanosleep /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->rqtp, args->rmtp);
}

tracepoint:syscalls:sys_enter_getitimer /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->which, args->value);
}

tracepoint:syscalls:sys_enter_alarm /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->seconds);
}

tracepoint:syscalls:sys_enter_setitimer /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->which, args->value, args->ovalue);
}

tracepoint:syscalls:sys_enter_getpid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_sendfile64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%d \n",  args->out_fd, args->in_fd, args->offset, args->count);
}

tracepoint:syscalls:sys_enter_socket /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->family, args->type, args->protocol);
}

tracepoint:syscalls:sys_enter_connect /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->uservaddr, args->addrlen);
}

tracepoint:syscalls:sys_enter_accept /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->fd, args->upeer_sockaddr, args->upeer_addrlen);
}

tracepoint:syscalls:sys_enter_sendto /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%p arg6:%d \n",  args->fd, args->buff, args->len, args->flags, args->addr, args->addr_len);
}

tracepoint:syscalls:sys_enter_recvfrom /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%p arg6:%p \n",  args->fd, args->ubuf, args->size, args->flags, args->addr, args->addr_len);
}

tracepoint:syscalls:sys_enter_sendmsg /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->fd, args->msg, args->flags);
}

tracepoint:syscalls:sys_enter_recvmsg /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->msg, args->flags);
}

tracepoint:syscalls:sys_enter_shutdown /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->how);
}

tracepoint:syscalls:sys_enter_bind /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->umyaddr, args->addrlen);
}

tracepoint:syscalls:sys_enter_listen /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->backlog);
}

tracepoint:syscalls:sys_enter_getsockname /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->fd, args->usockaddr, args->usockaddr_len);
}

tracepoint:syscalls:sys_enter_getpeername /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->fd, args->usockaddr, args->usockaddr_len);
}

tracepoint:syscalls:sys_enter_socketpair /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p \n",  args->family, args->type, args->protocol, args->usockvec);
}

tracepoint:syscalls:sys_enter_setsockopt /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p arg5:%d \n",  args->fd, args->level, args->optname, args->optval, args->optlen);
}

tracepoint:syscalls:sys_enter_getsockopt /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p arg5:%p \n",  args->fd, args->level, args->optname, args->optval, args->optlen);
}

tracepoint:syscalls:sys_enter_clone /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%p \n",  args->clone_flags, args->newsp, args->parent_tid, args->child_tid);
}

tracepoint:syscalls:sys_enter_fork /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_vfork /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_execve /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%c arg3:%c \n",  args->filename, args->argv, args->envp);
}

tracepoint:syscalls:sys_enter_exit /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->error_code);
}

tracepoint:syscalls:sys_enter_wait4 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%p \n",  args->upid, args->stat_addr, args->options, args->ru);
}

tracepoint:syscalls:sys_enter_kill /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->pid, args->sig);
}

tracepoint:syscalls:sys_enter_newuname /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->name);
}

tracepoint:syscalls:sys_enter_semget /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d \n",  args->key, args->nsems, args->semflg);
}

tracepoint:syscalls:sys_enter_semop /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->semid, args->tsops, args->nsops);
}

tracepoint:syscalls:sys_enter_semctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p \n",  args->semid, args->semnum, args->cmd, args->arg);
}

tracepoint:syscalls:sys_enter_shmdt /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->shmaddr);
}

tracepoint:syscalls:sys_enter_msgget /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->key, args->msgflg);
}

tracepoint:syscalls:sys_enter_msgsnd /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->msqid, args->msgp, args->msgsz, args->msgflg);
}

tracepoint:syscalls:sys_enter_msgrcv /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->msqid, args->msgp, args->msgsz, args->msgtyp, args->msgflg);
}

tracepoint:syscalls:sys_enter_msgctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p \n",  args->msqid, args->cmd, args->buf);
}

tracepoint:syscalls:sys_enter_fcntl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->fd, args->cmd, args->arg);
}

tracepoint:syscalls:sys_enter_flock /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->cmd);
}

tracepoint:syscalls:sys_enter_fsync /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fd);
}

tracepoint:syscalls:sys_enter_fdatasync /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fd);
}

tracepoint:syscalls:sys_enter_truncate /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->path, args->length);
}

tracepoint:syscalls:sys_enter_ftruncate /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->length);
}

tracepoint:syscalls:sys_enter_getdents /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->dirent, args->count);
}

tracepoint:syscalls:sys_enter_getcwd /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->buf, args->size);
}

tracepoint:syscalls:sys_enter_chdir /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->filename);
}

tracepoint:syscalls:sys_enter_fchdir /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fd);
}

tracepoint:syscalls:sys_enter_rename /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->oldname, args->newname);
}

tracepoint:syscalls:sys_enter_mkdir /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->pathname, args->mode);
}

tracepoint:syscalls:sys_enter_rmdir /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->pathname);
}

tracepoint:syscalls:sys_enter_creat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->pathname, args->mode);
}

tracepoint:syscalls:sys_enter_link /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->oldname, args->newname);
}

tracepoint:syscalls:sys_enter_unlink /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->pathname);
}

tracepoint:syscalls:sys_enter_symlink /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->oldname, args->newname);
}

tracepoint:syscalls:sys_enter_readlink /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d \n",  args->path, args->buf, args->bufsiz);
}

tracepoint:syscalls:sys_enter_chmod /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->filename, args->mode);
}

tracepoint:syscalls:sys_enter_fchmod /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->fd, args->mode);
}

tracepoint:syscalls:sys_enter_chown /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->filename, args->user, args->group);
}

tracepoint:syscalls:sys_enter_fchown /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p \n",  args->fd, args->user, args->group);
}

tracepoint:syscalls:sys_enter_lchown /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->filename, args->user, args->group);
}

tracepoint:syscalls:sys_enter_umask /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->mask);
}

tracepoint:syscalls:sys_enter_gettimeofday /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->tv, args->tz);
}

tracepoint:syscalls:sys_enter_getrlimit /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->resource, args->rlim);
}

tracepoint:syscalls:sys_enter_getrusage /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->who, args->ru);
}

tracepoint:syscalls:sys_enter_sysinfo /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->info);
}

tracepoint:syscalls:sys_enter_times /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->info);
}

tracepoint:syscalls:sys_enter_ptrace /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d \n",  args->request, args->pid, args->addr, args->data);
}

tracepoint:syscalls:sys_enter_getuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_syslog /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->type, args->buf, args->len);
}

tracepoint:syscalls:sys_enter_getgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_setuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->uid);
}

tracepoint:syscalls:sys_enter_setgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->gid);
}

tracepoint:syscalls:sys_enter_geteuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_getegid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_setpgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pid, args->pgid);
}

tracepoint:syscalls:sys_enter_getppid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_getpgrp /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_setsid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_setreuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->ruid, args->euid);
}

tracepoint:syscalls:sys_enter_setregid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->rgid, args->egid);
}

tracepoint:syscalls:sys_enter_getgroups /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->gidsetsize, args->grouplist);
}

tracepoint:syscalls:sys_enter_setgroups /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->gidsetsize, args->grouplist);
}

tracepoint:syscalls:sys_enter_setresuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->ruid, args->euid, args->suid);
}

tracepoint:syscalls:sys_enter_getresuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->ruid, args->euid, args->suid);
}

tracepoint:syscalls:sys_enter_setresgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->rgid, args->egid, args->sgid);
}

tracepoint:syscalls:sys_enter_getresgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->rgid, args->egid, args->sgid);
}

tracepoint:syscalls:sys_enter_getpgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->pid);
}

tracepoint:syscalls:sys_enter_setfsuid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->uid);
}

tracepoint:syscalls:sys_enter_setfsgid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->gid);
}

tracepoint:syscalls:sys_enter_getsid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->pid);
}

tracepoint:syscalls:sys_enter_capget /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->header, args->dataptr);
}

tracepoint:syscalls:sys_enter_capset /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->header, args->data);
}

tracepoint:syscalls:sys_enter_rt_sigpending /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->set, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_rt_sigtimedwait /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d \n",  args->uthese, args->uinfo, args->uts, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_rt_sigqueueinfo /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->pid, args->sig, args->uinfo);
}

tracepoint:syscalls:sys_enter_rt_sigsuspend /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->unewset, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_sigaltstack /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->uss, args->uoss);
}

tracepoint:syscalls:sys_enter_utime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->filename, args->times);
}

tracepoint:syscalls:sys_enter_mknod /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->filename, args->mode, args->dev);
}

tracepoint:syscalls:sys_enter_personality /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->personality);
}

tracepoint:syscalls:sys_enter_ustat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->dev, args->ubuf);
}

tracepoint:syscalls:sys_enter_statfs /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pathname, args->buf);
}

tracepoint:syscalls:sys_enter_fstatfs /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->fd, args->buf);
}

tracepoint:syscalls:sys_enter_getpriority /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->which, args->who);
}

tracepoint:syscalls:sys_enter_setpriority /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->which, args->who, args->niceval);
}

tracepoint:syscalls:sys_enter_sched_setparam /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pid, args->param);
}

tracepoint:syscalls:sys_enter_sched_getparam /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pid, args->param);
}

tracepoint:syscalls:sys_enter_sched_setscheduler /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->pid, args->policy, args->param);
}

tracepoint:syscalls:sys_enter_sched_getscheduler /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->pid);
}

tracepoint:syscalls:sys_enter_sched_get_priority_max /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->policy);
}

tracepoint:syscalls:sys_enter_sched_get_priority_min /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->policy);
}

tracepoint:syscalls:sys_enter_sched_rr_get_interval /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pid, args->interval);
}

tracepoint:syscalls:sys_enter_mlock /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->start, args->len);
}

tracepoint:syscalls:sys_enter_munlock /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->start, args->len);
}

tracepoint:syscalls:sys_enter_mlockall /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->flags);
}

tracepoint:syscalls:sys_enter_munlockall /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_vhangup /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_modify_ldt /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->func, args->ptr, args->bytecount);
}

tracepoint:syscalls:sys_enter_pivot_root /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->new_root, args->put_old);
}

tracepoint:syscalls:sys_enter_sysctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->args);
}

tracepoint:syscalls:sys_enter_prctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d \n",  args->option, args->arg2, args->arg3, args->arg4, args->arg5);
}

tracepoint:syscalls:sys_enter_arch_prctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->task, args->code, args->addr);
}

tracepoint:syscalls:sys_enter_adjtimex /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->txc_p);
}

tracepoint:syscalls:sys_enter_setrlimit /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->resource, args->rlim);
}

tracepoint:syscalls:sys_enter_chroot /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->filename);
}

tracepoint:syscalls:sys_enter_sync /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_acct /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->name);
}

tracepoint:syscalls:sys_enter_settimeofday /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->tv, args->tz);
}

tracepoint:syscalls:sys_enter_mount /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d arg5:%p \n",  args->dev_name, args->dir_name, args->type, args->flags, args->data);
}

tracepoint:syscalls:sys_enter_umount /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->target, args->flags);
}

tracepoint:syscalls:sys_enter_swapon /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->specialfile, args->swap_flags);
}

tracepoint:syscalls:sys_enter_swapoff /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->specialfile);
}

tracepoint:syscalls:sys_enter_reboot /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p \n",  args->magic1, args->magic2, args->cmd, args->arg);
}

tracepoint:syscalls:sys_enter_sethostname /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->name, args->len);
}

tracepoint:syscalls:sys_enter_setdomainname /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->name, args->len);
}

tracepoint:syscalls:sys_enter_iopl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->level, args->regs);
}

tracepoint:syscalls:sys_enter_ioperm /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->from, args->num, args->turn_on);
}

tracepoint:syscalls:sys_enter_init_module /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->umod, args->len, args->uargs);
}

tracepoint:syscalls:sys_enter_delete_module /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->name_user, args->flags);
}

tracepoint:syscalls:sys_enter_quotactl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p \n",  args->cmd, args->special, args->id, args->addr);
}

tracepoint:syscalls:sys_enter_gettid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_readahead /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->offset, args->count);
}

tracepoint:syscalls:sys_enter_setxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d arg5:%d \n",  args->pathname, args->name, args->value, args->size, args->flags);
}

tracepoint:syscalls:sys_enter_lsetxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d arg5:%d \n",  args->pathname, args->name, args->value, args->size, args->flags);
}

tracepoint:syscalls:sys_enter_fsetxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d arg5:%d \n",  args->fd, args->name, args->value, args->size, args->flags);
}

tracepoint:syscalls:sys_enter_getxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d \n",  args->pathname, args->name, args->value, args->size);
}

tracepoint:syscalls:sys_enter_lgetxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d \n",  args->pathname, args->name, args->value, args->size);
}

tracepoint:syscalls:sys_enter_fgetxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->fd, args->name, args->value, args->size);
}

tracepoint:syscalls:sys_enter_listxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d \n",  args->pathname, args->list, args->size);
}

tracepoint:syscalls:sys_enter_llistxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d \n",  args->pathname, args->list, args->size);
}

tracepoint:syscalls:sys_enter_flistxattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->list, args->size);
}

tracepoint:syscalls:sys_enter_removexattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pathname, args->name);
}

tracepoint:syscalls:sys_enter_lremovexattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->pathname, args->name);
}

tracepoint:syscalls:sys_enter_fremovexattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->fd, args->name);
}

tracepoint:syscalls:sys_enter_tkill /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->pid, args->sig);
}

tracepoint:syscalls:sys_enter_time /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->tloc);
}

tracepoint:syscalls:sys_enter_futex /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p arg5:%p arg6:%p \n",  args->uaddr, args->op, args->val, args->utime, args->uaddr2, args->val3);
}

tracepoint:syscalls:sys_enter_sched_setaffinity /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->pid, args->len, args->user_mask_ptr);
}

tracepoint:syscalls:sys_enter_sched_getaffinity /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->pid, args->len, args->user_mask_ptr);
}

tracepoint:syscalls:sys_enter_io_setup /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->nr_events, args->ctxp);
}

tracepoint:syscalls:sys_enter_io_destroy /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->ctx);
}

tracepoint:syscalls:sys_enter_io_getevents /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d arg4:%p \n",  args->ctx_id, args->min_nr, args->nr, args->events);
}

tracepoint:syscalls:sys_enter_io_submit /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->ctx_id, args->nr, args->iocbpp);
}

tracepoint:syscalls:sys_enter_io_cancel /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->ctx_id, args->iocb, args->result);
}

tracepoint:syscalls:sys_enter_lookup_dcookie /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->cookie64, args->buf, args->len);
}

tracepoint:syscalls:sys_enter_epoll_create /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->size);
}

tracepoint:syscalls:sys_enter_remap_file_pages /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d \n",  args->start, args->size, args->prot, args->pgoff, args->flags);
}

tracepoint:syscalls:sys_enter_getdents64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->dirent, args->count);
}

tracepoint:syscalls:sys_enter_set_tid_address /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->tidptr);
}

tracepoint:syscalls:sys_enter_restart_syscall /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_semtimedop /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p \n",  args->semid, args->tsops, args->nsops, args->timeout);
}

tracepoint:syscalls:sys_enter_fadvise64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->fd, args->offset, args->len, args->advice);
}

tracepoint:syscalls:sys_enter_timer_create /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->which_clock, args->timer_event_spec, args->created_timer_id);
}

tracepoint:syscalls:sys_enter_timer_settime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%p \n",  args->timer_id, args->flags, args->new_setting, args->old_setting);
}

tracepoint:syscalls:sys_enter_timer_gettime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->timer_id, args->setting);
}

tracepoint:syscalls:sys_enter_timer_getoverrun /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->timer_id);
}

tracepoint:syscalls:sys_enter_timer_delete /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->timer_id);
}

tracepoint:syscalls:sys_enter_clock_settime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->which_clock, args->tp);
}

tracepoint:syscalls:sys_enter_clock_gettime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->which_clock, args->tp);
}

tracepoint:syscalls:sys_enter_clock_getres /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->which_clock, args->tp);
}

tracepoint:syscalls:sys_enter_clock_nanosleep /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p \n",  args->which_clock, args->flags, args->rqtp, args->rmtp);
}

tracepoint:syscalls:sys_enter_exit_group /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->error_code);
}

tracepoint:syscalls:sys_enter_epoll_wait /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->epfd, args->events, args->maxevents, args->timeout);
}

tracepoint:syscalls:sys_enter_epoll_ctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p \n",  args->epfd, args->op, args->fd, args->event);
}

tracepoint:syscalls:sys_enter_tgkill /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d \n",  args->tgid, args->pid, args->sig);
}

tracepoint:syscalls:sys_enter_utimes /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->filename, args->utimes);
}

tracepoint:syscalls:sys_enter_mbind /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p arg5:%d arg6:%p \n",  args->start, args->len, args->mode, args->nmask, args->maxnode, args->flags);
}

tracepoint:syscalls:sys_enter_set_mempolicy /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->mode, args->nmask, args->maxnode);
}

tracepoint:syscalls:sys_enter_get_mempolicy /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->policy, args->nmask, args->maxnode, args->addr, args->flags);
}

tracepoint:syscalls:sys_enter_mq_open /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p \n",  args->u_name, args->oflag, args->mode, args->u_attr);
}

tracepoint:syscalls:sys_enter_mq_unlink /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p \n",  args->u_name);
}

tracepoint:syscalls:sys_enter_mq_timedsend /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%d arg5:%p \n",  args->mqdes, args->u_msg_ptr, args->msg_len, args->msg_prio, args->u_abs_timeout);
}

tracepoint:syscalls:sys_enter_mq_timedreceive /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%p arg5:%p \n",  args->mqdes, args->u_msg_ptr, args->msg_len, args->u_msg_prio, args->u_abs_timeout);
}

tracepoint:syscalls:sys_enter_mq_notify /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->mqdes, args->u_notification);
}

tracepoint:syscalls:sys_enter_mq_getsetattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->mqdes, args->u_mqstat, args->u_omqstat);
}

tracepoint:syscalls:sys_enter_kexec_load /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%d \n",  args->entry, args->nr_segments, args->segments, args->flags);
}

tracepoint:syscalls:sys_enter_waitid /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d arg5:%p \n",  args->which, args->upid, args->infop, args->options, args->ru);
}

tracepoint:syscalls:sys_enter_add_key /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d \n",  args->_type, args->_description, args->_payload, args->plen);
}

tracepoint:syscalls:sys_enter_request_key /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p arg4:%d \n",  args->_type, args->_description, args->_callout_info, args->destringid);
}

tracepoint:syscalls:sys_enter_keyctl /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d \n",  args->option, args->arg2, args->arg3, args->arg4, args->arg5);
}

tracepoint:syscalls:sys_enter_ioprio_set /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->which, args->who, args->ioprio);
}

tracepoint:syscalls:sys_enter_ioprio_get /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->which, args->who);
}

tracepoint:syscalls:sys_enter_inotify_init /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf(" \n" );
}

tracepoint:syscalls:sys_enter_inotify_add_watch /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->fd, args->pathname, args->mask);
}

tracepoint:syscalls:sys_enter_inotify_rm_watch /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->wd);
}

tracepoint:syscalls:sys_enter_migrate_pages /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p \n",  args->pid, args->maxnode, args->old_nodes, args->new_nodes);
}

tracepoint:syscalls:sys_enter_openat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->dfd, args->filename, args->flags, args->mode);
}

tracepoint:syscalls:sys_enter_mkdirat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->dfd, args->pathname, args->mode);
}

tracepoint:syscalls:sys_enter_mknodat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p \n",  args->dfd, args->filename, args->mode, args->dev);
}

tracepoint:syscalls:sys_enter_fchownat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%d \n",  args->dfd, args->filename, args->user, args->group, args->flag);
}

tracepoint:syscalls:sys_enter_futimesat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->dfd, args->filename, args->utimes);
}

tracepoint:syscalls:sys_enter_newfstatat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->dfd, args->filename, args->statbuf, args->flag);
}

tracepoint:syscalls:sys_enter_unlinkat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->dfd, args->pathname, args->flag);
}

tracepoint:syscalls:sys_enter_renameat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p \n",  args->oldfd, args->oldname, args->newfd, args->newname);
}

tracepoint:syscalls:sys_enter_linkat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%d \n",  args->oldfd, args->oldname, args->newfd, args->newname, args->flags);
}

tracepoint:syscalls:sys_enter_symlinkat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p \n",  args->oldname, args->newfd, args->newname);
}

tracepoint:syscalls:sys_enter_readlinkat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->dfd, args->pathname, args->buf, args->bufsiz);
}

tracepoint:syscalls:sys_enter_fchmodat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->dfd, args->filename, args->mode);
}

tracepoint:syscalls:sys_enter_faccessat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->dfd, args->filename, args->mode);
}

tracepoint:syscalls:sys_enter_pselect6 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p arg5:%p arg6:%p \n",  args->n, args->inp, args->outp, args->exp, args->tsp, args->sig);
}

tracepoint:syscalls:sys_enter_ppoll /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p arg5:%d \n",  args->ufds, args->nfds, args->tsp, args->sigmask, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_unshare /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->unshare_flags);
}

tracepoint:syscalls:sys_enter_set_robust_list /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->head, args->len);
}

tracepoint:syscalls:sys_enter_get_robust_list /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p \n",  args->pid, args->head_ptr, args->len_ptr);
}

tracepoint:syscalls:sys_enter_splice /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%d arg6:%d \n",  args->fd_in, args->off_in, args->fd_out, args->off_out, args->len, args->flags);
}

tracepoint:syscalls:sys_enter_tee /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d \n",  args->fdin, args->fdout, args->len, args->flags);
}

tracepoint:syscalls:sys_enter_sync_file_range /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->fd, args->offset, args->bytes, args->flags);
}

tracepoint:syscalls:sys_enter_vmsplice /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->fd, args->iov, args->nr_segs, args->flags);
}

tracepoint:syscalls:sys_enter_move_pages /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p arg5:%p arg6:%d \n",  args->pid, args->nr_pages, args->pages, args->nodes, args->status, args->flags);
}

tracepoint:syscalls:sys_enter_utimensat /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->dfd, args->filename, args->utimes, args->flags);
}

tracepoint:syscalls:sys_enter_epoll_pwait /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%p arg6:%d \n",  args->epfd, args->events, args->maxevents, args->timeout, args->sigmask, args->sigsetsize);
}

tracepoint:syscalls:sys_enter_signalfd /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->ufd, args->user_mask, args->sizemask);
}

tracepoint:syscalls:sys_enter_timerfd_create /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->clockid, args->flags);
}

tracepoint:syscalls:sys_enter_eventfd /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->count);
}

tracepoint:syscalls:sys_enter_fallocate /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%p \n",  args->fd, args->mode, args->offset, args->len);
}

tracepoint:syscalls:sys_enter_timerfd_settime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p arg4:%p \n",  args->ufd, args->flags, args->utmr, args->otmr);
}

tracepoint:syscalls:sys_enter_timerfd_gettime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p \n",  args->ufd, args->otmr);
}

tracepoint:syscalls:sys_enter_accept4 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%d \n",  args->fd, args->upeer_sockaddr, args->upeer_addrlen, args->flags);
}

tracepoint:syscalls:sys_enter_signalfd4 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->ufd, args->user_mask, args->sizemask, args->flags);
}

tracepoint:syscalls:sys_enter_eventfd2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->count, args->flags);
}

tracepoint:syscalls:sys_enter_epoll_create1 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->flags);
}

tracepoint:syscalls:sys_enter_dup3 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->oldfd, args->newfd, args->flags);
}

tracepoint:syscalls:sys_enter_pipe2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->filedes, args->flags);
}

tracepoint:syscalls:sys_enter_inotify_init1 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->flags);
}

tracepoint:syscalls:sys_enter_preadv /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->fd, args->vec, args->vlen, args->pos_l, args->pos_h);
}

tracepoint:syscalls:sys_enter_pwritev /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->fd, args->vec, args->vlen, args->pos_l, args->pos_h);
}

tracepoint:syscalls:sys_enter_rt_tgsigqueueinfo /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%p \n",  args->tgid, args->pid, args->sig, args->uinfo);
}

tracepoint:syscalls:sys_enter_perf_event_open /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->attr_uptr, args->pid, args->cpu, args->group_fd, args->flags);
}

tracepoint:syscalls:sys_enter_recvmmsg /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%p \n",  args->fd, args->mmsg, args->vlen, args->flags, args->timeout);
}

tracepoint:syscalls:sys_enter_fanotify_init /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->flags, args->event_f_flags);
}

tracepoint:syscalls:sys_enter_fanotify_mark /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%d arg5:%d \n",  args->fanotify_fd, args->flags, args->mask, args->dfd, args->pathname);
}

tracepoint:syscalls:sys_enter_prlimit64 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%p arg4:%p \n",  args->pid, args->resource, args->new_rlim, args->old_rlim);
}

tracepoint:syscalls:sys_enter_name_to_handle_at /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p arg5:%d \n",  args->dfd, args->name, args->handle, args->mnt_id, args->flag);
}

tracepoint:syscalls:sys_enter_open_by_handle_at /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%p arg4:%p arg5:%d \n",  args->dfd, args->name, args->handle, args->mnt_id, args->flags);
}

tracepoint:syscalls:sys_enter_clock_adjtime /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p \n",  args->which_clock, args->tx);
}

tracepoint:syscalls:sys_enter_syncfs /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d \n",  args->fd);
}

tracepoint:syscalls:sys_enter_sendmmsg /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d \n",  args->fd, args->mmsg, args->vlen, args->flags);
}

tracepoint:syscalls:sys_enter_setns /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->fd, args->nstype);
}

tracepoint:syscalls:sys_enter_getcpu /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%p \n",  args->cpup, args->nodep, args->unused);
}

tracepoint:syscalls:sys_enter_process_vm_readv /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%p arg5:%d arg6:%d \n",  args->pid, args->lvec, args->liovcnt, args->rvec, args->riovcnt, args->flags);
}

tracepoint:syscalls:sys_enter_process_vm_writev /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%p arg5:%d arg6:%d \n",  args->pid, args->lvec, args->liovcnt, args->rvec, args->riovcnt, args->flags);
}

tracepoint:syscalls:sys_enter_kcmp /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%d arg5:%d \n",  args->pid1, args->pid2, args->type, args->idx1, args->idx2);
}

tracepoint:syscalls:sys_enter_finit_module /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->fd, args->uargs, args->flags);
}

tracepoint:syscalls:sys_enter_sched_setattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d \n",  args->pid, args->attr, args->flags);
}

tracepoint:syscalls:sys_enter_sched_getattr /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%p arg3:%d arg4:%d \n",  args->pid, args->attr, args->size, args->flags);
}

tracepoint:syscalls:sys_enter_renameat2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%d \n",  args->olddfd, args->oldname, args->newdfd, args->newname, args->flags);
}

tracepoint:syscalls:sys_enter_seccomp /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%p \n",  args->op, args->flags, args->uargs);
}

tracepoint:syscalls:sys_enter_getrandom /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d arg3:%d \n",  args->buf, args->count, args->flags);
}

tracepoint:syscalls:sys_enter_memfd_create /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%p arg2:%d \n",  args->uname_ptr, args->flags);
}

tracepoint:syscalls:sys_enter_kexec_file_load /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d arg4:%p arg5:%d \n",  args->kernel_fd, args->initrd_fd, args->cmdline_len, args->cmdline_ptr, args->flags);
}

tracepoint:syscalls:sys_enter_bpf /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d \n",  args->cmd, args->attr, args->size);
}

tracepoint:syscalls:sys_enter_membarrier /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d \n",  args->cmd, args->flags);
}

tracepoint:syscalls:sys_enter_mlock2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%d arg3:%d \n",  args->start, args->len, args->flags);
}

tracepoint:syscalls:sys_enter_copy_file_range /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%p arg5:%d arg6:%d \n",  args->fd_in, args->off_in, args->fd_out, args->off_out, args->len, args->flags);
}

tracepoint:syscalls:sys_enter_preadv2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%d arg6:%d \n",  args->fd, args->vec, args->vlen, args->pos_l, args->pos_h, args->flags);
}

tracepoint:syscalls:sys_enter_pwritev2 /comm == "readmeme"/
{
    time("%H:%M:%S  ");
    printf("%-6d %-9s %s \n", pid, comm, probe);

    printf("arg1:%d arg2:%p arg3:%d arg4:%d arg5:%d arg6:%d \n",  args->fd, args->vec, args->vlen, args->pos_l, args->pos_h, args->flags);
}
*/